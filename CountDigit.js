/**
 * Подсчитайте цифру
 *
 * Возьмите целое число n (n >= 0) и цифру d (0 <= d <= 9) в качестве целого числа.
 * Возведите в квадрат все числа k (0 <= k <= n) между 0 и n.
 * Подсчитайте количество цифр d, использованных при записи всех k**2.
 *
 * Реализуйте функцию, принимающую n и d в качестве параметров
 * и возвращающую это количество.
 *
 * Примеры:
 * n = 10, d = 1,
 * k*k равны 0, 1, 4, 9, 16, 25, 36, 49, 64, 81, 100
 * Мы используем цифру 1 в: 1, 16, 81, 100. Тогда общее количество равно 4.
 *
 * Функция, при задании n = 25 и d = 1 в качестве аргумента, должна возвращать 11,
 * поскольку k*k, содержащие цифру 1, равны:
 * 1, 16, 81, 100, 121, 144, 169, 196, 361, 441.
 * Таким образом, существует 11 цифр 1 для квадратов чисел от 0 до 25.
 *
 * Обратите внимание, что число 121 в два раза больше цифры 1.
 */

function nbDig(n, d) {
  let array = [];

  squareAllBetweenZeroAnd(n, array);

  array = array.join("");

  return getNumbersOfDigits(d, array);
}

function squareAllBetweenZeroAnd(n, array) {
  for (let i = 0; i <= n; i++) {
    array.push(Math.pow(i, 2));
  }
}

function getNumbersOfDigits(d, str) {
  const pattern = new RegExp(d, "g");

  return str.match(pattern).length;
}
